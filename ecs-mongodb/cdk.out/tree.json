{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "projen-test-dev": {
        "id": "projen-test-dev",
        "path": "projen-test-dev",
        "children": {
          "Vpc": {
            "id": "Vpc",
            "path": "projen-test-dev/Vpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "projen-test-dev/Vpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "projen-test-dev/Vpc"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPC",
                  "version": "2.66.1"
                }
              },
              "publicSubnet1": {
                "id": "publicSubnet1",
                "path": "projen-test-dev/Vpc/publicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "projen-test-dev/Vpc/publicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": "eu-central-1a",
                        "cidrBlock": "10.0.0.0/18",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.66.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "projen-test-dev/Vpc/publicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "projen-test-dev/Vpc/publicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "projen-test-dev/Vpc/publicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
                        },
                        "subnetId": {
                          "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.66.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "projen-test-dev/Vpc/publicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcpublicSubnet1RouteTable15C15F8E"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.66.1"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "projen-test-dev/Vpc/publicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnEIP",
                      "version": "2.66.1"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "projen-test-dev/Vpc/publicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "subnetId": {
                          "Ref": "VpcpublicSubnet1Subnet2BB74ED7"
                        },
                        "allocationId": {
                          "Fn::GetAtt": [
                            "VpcpublicSubnet1EIP411541E6",
                            "AllocationId"
                          ]
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/publicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnNatGateway",
                      "version": "2.66.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.66.1"
                }
              },
              "publicSubnet2": {
                "id": "publicSubnet2",
                "path": "projen-test-dev/Vpc/publicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "projen-test-dev/Vpc/publicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": "eu-central-1b",
                        "cidrBlock": "10.0.64.0/18",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/publicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.66.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "projen-test-dev/Vpc/publicSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "projen-test-dev/Vpc/publicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/publicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "projen-test-dev/Vpc/publicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
                        },
                        "subnetId": {
                          "Ref": "VpcpublicSubnet2SubnetE34B022A"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.66.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "projen-test-dev/Vpc/publicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcpublicSubnet2RouteTableC5A6DF77"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "VpcIGWD7BA715C"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.66.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PublicSubnet",
                  "version": "2.66.1"
                }
              },
              "privateSubnet1": {
                "id": "privateSubnet1",
                "path": "projen-test-dev/Vpc/privateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "projen-test-dev/Vpc/privateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": "eu-central-1a",
                        "cidrBlock": "10.0.128.0/18",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/privateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.66.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "projen-test-dev/Vpc/privateSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "projen-test-dev/Vpc/privateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/privateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "projen-test-dev/Vpc/privateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcprivateSubnet1RouteTable1979EACB"
                        },
                        "subnetId": {
                          "Ref": "VpcprivateSubnet1SubnetCEAD3716"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.66.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "projen-test-dev/Vpc/privateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcprivateSubnet1RouteTable1979EACB"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcpublicSubnet1NATGatewayA036E8A6"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.66.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.66.1"
                }
              },
              "privateSubnet2": {
                "id": "privateSubnet2",
                "path": "projen-test-dev/Vpc/privateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "projen-test-dev/Vpc/privateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "availabilityZone": "eu-central-1b",
                        "cidrBlock": "10.0.192.0/18",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/privateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnet",
                      "version": "2.66.1"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "projen-test-dev/Vpc/privateSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "projen-test-dev/Vpc/privateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "Vpc8378EB38"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Vpc/privateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRouteTable",
                      "version": "2.66.1"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "projen-test-dev/Vpc/privateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C"
                        },
                        "subnetId": {
                          "Ref": "VpcprivateSubnet2Subnet2DE7549C"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnSubnetRouteTableAssociation",
                      "version": "2.66.1"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "projen-test-dev/Vpc/privateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "VpcpublicSubnet1NATGatewayA036E8A6"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.CfnRoute",
                      "version": "2.66.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.PrivateSubnet",
                  "version": "2.66.1"
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "projen-test-dev/Vpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "projen-test-dev/Vpc"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnInternetGateway",
                  "version": "2.66.1"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "projen-test-dev/Vpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "Vpc8378EB38"
                    },
                    "internetGatewayId": {
                      "Ref": "VpcIGWD7BA715C"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ec2.CfnVPCGatewayAttachment",
                  "version": "2.66.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ec2.Vpc",
              "version": "2.66.1"
            }
          },
          "Cluster": {
            "id": "Cluster",
            "path": "projen-test-dev/Cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "projen-test-dev/Cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {}
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnCluster",
                  "version": "2.66.1"
                }
              },
              "DefaultAutoScalingGroup": {
                "id": "DefaultAutoScalingGroup",
                "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup",
                "children": {
                  "InstanceSecurityGroup": {
                    "id": "InstanceSecurityGroup",
                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                          "aws:cdk:cloudformation:props": {
                            "groupDescription": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceSecurityGroup",
                            "securityGroupEgress": [
                              {
                                "cidrIp": "0.0.0.0/0",
                                "description": "Allow all outbound traffic by default",
                                "ipProtocol": "-1"
                              }
                            ],
                            "tags": [
                              {
                                "key": "Name",
                                "value": "projen-test-dev/Cluster/DefaultAutoScalingGroup"
                              }
                            ],
                            "vpcId": {
                              "Ref": "Vpc8378EB38"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_ec2.CfnSecurityGroup",
                          "version": "2.66.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_ec2.SecurityGroup",
                      "version": "2.66.1"
                    }
                  },
                  "InstanceRole": {
                    "id": "InstanceRole",
                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceRole",
                    "children": {
                      "ImportInstanceRole": {
                        "id": "ImportInstanceRole",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceRole/ImportInstanceRole",
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.Resource",
                          "version": "2.66.1"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceRole/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                          "aws:cdk:cloudformation:props": {
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "ec2.amazonaws.com"
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "tags": [
                              {
                                "key": "Name",
                                "value": "projen-test-dev/Cluster/DefaultAutoScalingGroup"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                          "version": "2.66.1"
                        }
                      },
                      "DefaultPolicy": {
                        "id": "DefaultPolicy",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceRole/DefaultPolicy/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                              "aws:cdk:cloudformation:props": {
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": [
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:Submit*"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": {
                                        "Fn::GetAtt": [
                                          "ClusterEB0386A7",
                                          "Arn"
                                        ]
                                      }
                                    },
                                    {
                                      "Action": [
                                        "ecs:Poll",
                                        "ecs:StartTelemetrySession"
                                      ],
                                      "Condition": {
                                        "ArnEquals": {
                                          "ecs:cluster": {
                                            "Fn::GetAtt": [
                                              "ClusterEB0386A7",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      },
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    },
                                    {
                                      "Action": [
                                        "ecs:DiscoverPollEndpoint",
                                        "ecr:GetAuthorizationToken",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*"
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "policyName": "ClusterDefaultAutoScalingGroupInstanceRoleDefaultPolicy06157A81",
                                "roles": [
                                  {
                                    "Ref": "ClusterDefaultAutoScalingGroupInstanceRole9A14B384"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                              "version": "2.66.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Policy",
                          "version": "2.66.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Role",
                      "version": "2.66.1"
                    }
                  },
                  "InstanceProfile": {
                    "id": "InstanceProfile",
                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/InstanceProfile",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                      "aws:cdk:cloudformation:props": {
                        "roles": [
                          {
                            "Ref": "ClusterDefaultAutoScalingGroupInstanceRole9A14B384"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnInstanceProfile",
                      "version": "2.66.1"
                    }
                  },
                  "LaunchConfig": {
                    "id": "LaunchConfig",
                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LaunchConfig",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                      "aws:cdk:cloudformation:props": {
                        "imageId": {
                          "Ref": "SsmParameterValueawsserviceecsoptimizedamiamazonlinux2recommendedimageidC96584B6F00A464EAD1953AFF4B05118Parameter"
                        },
                        "instanceType": "t3.medium",
                        "iamInstanceProfile": {
                          "Ref": "ClusterDefaultAutoScalingGroupInstanceProfile2BB4FE55"
                        },
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "ClusterDefaultAutoScalingGroupInstanceSecurityGroup1D15236A",
                              "GroupId"
                            ]
                          }
                        ],
                        "userData": {
                          "Fn::Base64": {
                            "Fn::Join": [
                              "",
                              [
                                "#!/bin/bash\necho ECS_CLUSTER=",
                                {
                                  "Ref": "ClusterEB0386A7"
                                },
                                " >> /etc/ecs/ecs.config\nsudo iptables --insert FORWARD 1 --in-interface docker+ --destination 169.254.169.254/32 --jump DROP\nsudo service iptables save\necho ECS_AWSVPC_BLOCK_IMDS=true >> /etc/ecs/ecs.config"
                              ]
                            ]
                          }
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_autoscaling.CfnLaunchConfiguration",
                      "version": "2.66.1"
                    }
                  },
                  "ASG": {
                    "id": "ASG",
                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/ASG",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                      "aws:cdk:cloudformation:props": {
                        "maxSize": "1",
                        "minSize": "1",
                        "desiredCapacity": "1",
                        "launchConfigurationName": {
                          "Ref": "ClusterDefaultAutoScalingGroupLaunchConfig81EA5466"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "projen-test-dev/Cluster/DefaultAutoScalingGroup",
                            "propagateAtLaunch": true
                          }
                        ],
                        "vpcZoneIdentifier": [
                          {
                            "Ref": "VpcprivateSubnet1SubnetCEAD3716"
                          },
                          {
                            "Ref": "VpcprivateSubnet2Subnet2DE7549C"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_autoscaling.CfnAutoScalingGroup",
                      "version": "2.66.1"
                    }
                  },
                  "DrainECSHook": {
                    "id": "DrainECSHook",
                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook",
                    "children": {
                      "Function": {
                        "id": "Function",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function",
                        "children": {
                          "ServiceRole": {
                            "id": "ServiceRole",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole",
                            "children": {
                              "ImportServiceRole": {
                                "id": "ImportServiceRole",
                                "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/ImportServiceRole",
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.Resource",
                                  "version": "2.66.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                                  "aws:cdk:cloudformation:props": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "lambda.amazonaws.com"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "managedPolicyArns": [
                                      {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                                          ]
                                        ]
                                      }
                                    ],
                                    "tags": [
                                      {
                                        "key": "Name",
                                        "value": "projen-test-dev/Cluster/DefaultAutoScalingGroup"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                                  "version": "2.66.1"
                                }
                              },
                              "DefaultPolicy": {
                                "id": "DefaultPolicy",
                                "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy",
                                "children": {
                                  "Resource": {
                                    "id": "Resource",
                                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/ServiceRole/DefaultPolicy/Resource",
                                    "attributes": {
                                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                      "aws:cdk:cloudformation:props": {
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": [
                                                "ec2:DescribeInstances",
                                                "ec2:DescribeInstanceAttribute",
                                                "ec2:DescribeInstanceStatus",
                                                "ec2:DescribeHosts"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": "autoscaling:CompleteLifecycleAction",
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::Join": [
                                                  "",
                                                  [
                                                    "arn:",
                                                    {
                                                      "Ref": "AWS::Partition"
                                                    },
                                                    ":autoscaling:eu-central-1:647000908054:autoScalingGroup:*:autoScalingGroupName/",
                                                    {
                                                      "Ref": "ClusterDefaultAutoScalingGroupASG0F98E147"
                                                    }
                                                  ]
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:DescribeContainerInstances",
                                                "ecs:DescribeTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": {
                                                    "Fn::GetAtt": [
                                                      "ClusterEB0386A7",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            },
                                            {
                                              "Action": [
                                                "ecs:ListContainerInstances",
                                                "ecs:SubmitContainerStateChange",
                                                "ecs:SubmitTaskStateChange"
                                              ],
                                              "Effect": "Allow",
                                              "Resource": {
                                                "Fn::GetAtt": [
                                                  "ClusterEB0386A7",
                                                  "Arn"
                                                ]
                                              }
                                            },
                                            {
                                              "Action": [
                                                "ecs:UpdateContainerInstancesState",
                                                "ecs:ListTasks"
                                              ],
                                              "Condition": {
                                                "ArnEquals": {
                                                  "ecs:cluster": {
                                                    "Fn::GetAtt": [
                                                      "ClusterEB0386A7",
                                                      "Arn"
                                                    ]
                                                  }
                                                }
                                              },
                                              "Effect": "Allow",
                                              "Resource": "*"
                                            }
                                          ],
                                          "Version": "2012-10-17"
                                        },
                                        "policyName": "ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRoleDefaultPolicy221F6E5E",
                                        "roles": [
                                          {
                                            "Ref": "ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole2AC250B1"
                                          }
                                        ]
                                      }
                                    },
                                    "constructInfo": {
                                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                                      "version": "2.66.1"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                                  "version": "2.66.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.Role",
                              "version": "2.66.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                              "aws:cdk:cloudformation:props": {
                                "code": {
                                  "zipFile": "import boto3, json, os, time\n\necs = boto3.client('ecs')\nautoscaling = boto3.client('autoscaling')\n\n\ndef lambda_handler(event, context):\n  print(json.dumps(dict(event, ResponseURL='...')))\n  cluster = os.environ['CLUSTER']\n  snsTopicArn = event['Records'][0]['Sns']['TopicArn']\n  lifecycle_event = json.loads(event['Records'][0]['Sns']['Message'])\n  instance_id = lifecycle_event.get('EC2InstanceId')\n  if not instance_id:\n    print('Got event without EC2InstanceId: %s', json.dumps(dict(event, ResponseURL='...')))\n    return\n\n  instance_arn = container_instance_arn(cluster, instance_id)\n  print('Instance %s has container instance ARN %s' % (lifecycle_event['EC2InstanceId'], instance_arn))\n\n  if not instance_arn:\n    return\n\n  task_arns = container_instance_task_arns(cluster, instance_arn)\n\n  if task_arns:\n    print('Instance ARN %s has task ARNs %s' % (instance_arn, ', '.join(task_arns)))\n\n  while has_tasks(cluster, instance_arn, task_arns):\n    time.sleep(10)\n\n  try:\n    print('Terminating instance %s' % instance_id)\n    autoscaling.complete_lifecycle_action(\n        LifecycleActionResult='CONTINUE',\n        **pick(lifecycle_event, 'LifecycleHookName', 'LifecycleActionToken', 'AutoScalingGroupName'))\n  except Exception as e:\n    # Lifecycle action may have already completed.\n    print(str(e))\n\n\ndef container_instance_arn(cluster, instance_id):\n  \"\"\"Turn an instance ID into a container instance ARN.\"\"\"\n  arns = ecs.list_container_instances(cluster=cluster, filter='ec2InstanceId==' + instance_id)['containerInstanceArns']\n  if not arns:\n    return None\n  return arns[0]\n\ndef container_instance_task_arns(cluster, instance_arn):\n  \"\"\"Fetch tasks for a container instance ARN.\"\"\"\n  arns = ecs.list_tasks(cluster=cluster, containerInstance=instance_arn)['taskArns']\n  return arns\n\ndef has_tasks(cluster, instance_arn, task_arns):\n  \"\"\"Return True if the instance is running tasks for the given cluster.\"\"\"\n  instances = ecs.describe_container_instances(cluster=cluster, containerInstances=[instance_arn])['containerInstances']\n  if not instances:\n    return False\n  instance = instances[0]\n\n  if instance['status'] == 'ACTIVE':\n    # Start draining, then try again later\n    set_container_instance_to_draining(cluster, instance_arn)\n    return True\n\n  task_count = None\n\n  if task_arns:\n    # Fetch details for tasks running on the container instance\n    tasks = ecs.describe_tasks(cluster=cluster, tasks=task_arns)['tasks']\n    if tasks:\n      # Consider any non-stopped tasks as running\n      task_count = sum(task['lastStatus'] != 'STOPPED' for task in tasks) + instance['pendingTasksCount']\n\n  if not task_count:\n    # Fallback to instance task counts if detailed task information is unavailable\n    task_count = instance['runningTasksCount'] + instance['pendingTasksCount']\n\n  print('Instance %s has %s tasks' % (instance_arn, task_count))\n\n  return task_count > 0\n\ndef set_container_instance_to_draining(cluster, instance_arn):\n  ecs.update_container_instances_state(\n      cluster=cluster,\n      containerInstances=[instance_arn], status='DRAINING')\n\n\ndef pick(dct, *keys):\n  \"\"\"Pick a subset of a dict.\"\"\"\n  return {k: v for k, v in dct.items() if k in keys}\n"
                                },
                                "role": {
                                  "Fn::GetAtt": [
                                    "ClusterDefaultAutoScalingGroupDrainECSHookFunctionServiceRole2AC250B1",
                                    "Arn"
                                  ]
                                },
                                "environment": {
                                  "variables": {
                                    "CLUSTER": {
                                      "Ref": "ClusterEB0386A7"
                                    }
                                  }
                                },
                                "handler": "index.lambda_handler",
                                "runtime": "python3.9",
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "projen-test-dev/Cluster/DefaultAutoScalingGroup"
                                  }
                                ],
                                "timeout": 310
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                              "version": "2.66.1"
                            }
                          },
                          "AllowInvoke:projentestdevClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8350C259": {
                            "id": "AllowInvoke:projentestdevClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8350C259",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/AllowInvoke:projentestdevClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopic8350C259",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "ClusterDefaultAutoScalingGroupDrainECSHookFunctionFE918865",
                                    "Arn"
                                  ]
                                },
                                "principal": "sns.amazonaws.com",
                                "sourceArn": {
                                  "Ref": "ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicFE5437FB"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.66.1"
                            }
                          },
                          "Topic": {
                            "id": "Topic",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/DrainECSHook/Function/Topic/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::SNS::Subscription",
                                  "aws:cdk:cloudformation:props": {
                                    "protocol": "lambda",
                                    "topicArn": {
                                      "Ref": "ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicFE5437FB"
                                    },
                                    "endpoint": {
                                      "Fn::GetAtt": [
                                        "ClusterDefaultAutoScalingGroupDrainECSHookFunctionFE918865",
                                        "Arn"
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_sns.CfnSubscription",
                                  "version": "2.66.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sns.Subscription",
                              "version": "2.66.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_lambda.Function",
                          "version": "2.66.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "constructs.Construct",
                      "version": "10.1.260"
                    }
                  },
                  "LifecycleHookDrainHook": {
                    "id": "LifecycleHookDrainHook",
                    "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook",
                    "children": {
                      "Topic": {
                        "id": "Topic",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Topic/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::SNS::Topic",
                              "aws:cdk:cloudformation:props": {
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "projen-test-dev/Cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_sns.CfnTopic",
                              "version": "2.66.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_sns.Topic",
                          "version": "2.66.1"
                        }
                      },
                      "Role": {
                        "id": "Role",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role",
                        "children": {
                          "ImportRole": {
                            "id": "ImportRole",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/ImportRole",
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.Resource",
                              "version": "2.66.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "autoscaling.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                },
                                "tags": [
                                  {
                                    "key": "Name",
                                    "value": "projen-test-dev/Cluster/DefaultAutoScalingGroup"
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                              "version": "2.66.1"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sns:Publish",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Ref": "ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicFE5437FB"
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRoleDefaultPolicyFFFD6EA5",
                                    "roles": [
                                      {
                                        "Ref": "ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole70201663"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                                  "version": "2.66.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_iam.Policy",
                              "version": "2.66.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.Role",
                          "version": "2.66.1"
                        }
                      },
                      "Resource": {
                        "id": "Resource",
                        "path": "projen-test-dev/Cluster/DefaultAutoScalingGroup/LifecycleHookDrainHook/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::AutoScaling::LifecycleHook",
                          "aws:cdk:cloudformation:props": {
                            "autoScalingGroupName": {
                              "Ref": "ClusterDefaultAutoScalingGroupASG0F98E147"
                            },
                            "lifecycleTransition": "autoscaling:EC2_INSTANCE_TERMINATING",
                            "defaultResult": "CONTINUE",
                            "heartbeatTimeout": 300,
                            "notificationTargetArn": {
                              "Ref": "ClusterDefaultAutoScalingGroupLifecycleHookDrainHookTopicFE5437FB"
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "ClusterDefaultAutoScalingGroupLifecycleHookDrainHookRole70201663",
                                "Arn"
                              ]
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_autoscaling.CfnLifecycleHook",
                          "version": "2.66.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_autoscaling.LifecycleHook",
                      "version": "2.66.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_autoscaling.AutoScalingGroup",
                  "version": "2.66.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.Cluster",
              "version": "2.66.1"
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "projen-test-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.66.1"
            }
          },
          "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "projen-test-dev/SsmParameterValue:--aws--service--ecs--optimized-ami--amazon-linux-2--recommended--image_id:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.66.1"
            }
          },
          "MongoDB": {
            "id": "MongoDB",
            "path": "projen-test-dev/MongoDB",
            "children": {
              "TaskRole": {
                "id": "TaskRole",
                "path": "projen-test-dev/MongoDB/TaskRole",
                "children": {
                  "ImportTaskRole": {
                    "id": "ImportTaskRole",
                    "path": "projen-test-dev/MongoDB/TaskRole/ImportTaskRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.66.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "projen-test-dev/MongoDB/TaskRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.66.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.66.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "projen-test-dev/MongoDB/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "cpu": 512,
                        "essential": true,
                        "image": "mongo:5.0.15",
                        "memory": 1024,
                        "mountPoints": [
                          {
                            "containerPath": "/data/db",
                            "readOnly": false,
                            "sourceVolume": "my-data-volume"
                          }
                        ],
                        "name": "MongoDB",
                        "portMappings": [
                          {
                            "containerPort": 27017,
                            "hostPort": 27017,
                            "protocol": "tcp"
                          }
                        ],
                        "environment": [
                          {
                            "name": "MONGO_INITDB_ROOT_USERNAME",
                            "value": "root"
                          },
                          {
                            "name": "MONGO_INITDB_ROOT_PASSWORD",
                            "value": "secret123"
                          }
                        ]
                      }
                    ],
                    "family": "projentestdevMongoDB3AC07789",
                    "networkMode": "bridge",
                    "requiresCompatibilities": [
                      "EC2"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "MongoDBTaskRole93BA8D04",
                        "Arn"
                      ]
                    },
                    "volumes": [
                      {
                        "name": "my-data-volume",
                        "dockerVolumeConfiguration": {
                          "autoprovision": true,
                          "driver": "rexray/ebs",
                          "driverOpts": {
                            "volumetype": "gp2",
                            "size": "20"
                          },
                          "scope": "shared"
                        }
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnTaskDefinition",
                  "version": "2.66.1"
                }
              },
              "MongoDB": {
                "id": "MongoDB",
                "path": "projen-test-dev/MongoDB/MongoDB",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.ContainerDefinition",
                  "version": "2.66.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.Ec2TaskDefinition",
              "version": "2.66.1"
            }
          },
          "MongoDBService": {
            "id": "MongoDBService",
            "path": "projen-test-dev/MongoDBService",
            "children": {
              "Service": {
                "id": "Service",
                "path": "projen-test-dev/MongoDBService/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "ClusterEB0386A7"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "enableEcsManagedTags": false,
                    "launchType": "EC2",
                    "schedulingStrategy": "REPLICA",
                    "taskDefinition": {
                      "Ref": "MongoDB469701C9"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_ecs.CfnService",
                  "version": "2.66.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_ecs.Ec2Service",
              "version": "2.66.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "projen-test-dev/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "projen-test-dev/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.66.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.1.260"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "projen-test-dev/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.66.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "projen-test-dev/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.66.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.66.1"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.1.260"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.66.1"
    }
  }
}